AWSTemplateFormatVersion: 2010-09-09
Description: >
  CloudFormation Template for Milliseconds Converter Application. This template creates Application Load Balancer 
  with Auto Scaling Group of Amazon Linux 2 (ami-0947d2ba12ee1ff75) EC2 Instances which host Python Flask Web Application.
  EC2 instances are placed within WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup,
  and Application Load Balancer is placed within ALBSecurityGroup which allows http (80) connections from anywhere.
  WebServerASG Auto Scaling Group is using the WebServerLT Launch Template in order to spin up instances needed, 
  and WebServerLT Launch Template is configured to prepare Python Flask environment on EC2,
  and to deploy Milliseconds Converter Application on Flask Server after downloading the app code from Github repository.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Application Load Balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          
  WebServerLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: CFlaunchtemplate
      LaunchTemplateData:
        InstanceType: t2.micro
        KeyName: key
        ImageId:  ami-0947d2ba12ee1ff75
        SecurityGroups:
          - !Ref WebServerSecurityGroup
        UserData: 
          Fn::Base64: 
            !Sub |
              #! /bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              wget -P templates https://raw.githubusercontent.com/simplex06/clarusway-aws-devops/master/ozkan-aws-devops/aws/projects/002-milliseconds-converter/templates/index.html
              wget -P templates https://raw.githubusercontent.com/simplex06/clarusway-aws-devops/master/ozkan-aws-devops/aws/projects/002-milliseconds-converter/templates/result.html
              wget https://raw.githubusercontent.com/simplex06/clarusway-aws-devops/master/ozkan-aws-devops/aws/projects/002-milliseconds-converter/app.py
              python3 app.py

  WebServerTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 25
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId

  myApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId  
      Subnets: !Ref Subnets
        

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref WebServerTG
      LoadBalancerArn: !Ref myApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  WebServerASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      LaunchTemplate:
        LaunchTemplateId: !Ref WebServerLT
        Version: !GetAtt WebServerLT.DefaultVersionNumber #specify LatestVersionNumber or DefaultVersionNumber using the Fn::GetAtt function.
      DesiredCapacity: '2'
      HealthCheckType: ELB
      HealthCheckGracePeriod: 90
      MinSize: '1'
      MaxSize: '3'
      TargetGroupARNs:
        - !Ref WebServerTG
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt myApplicationLoadBalancer.DNSName
    Description: Milliseconds Converter Application Load Balancer URL